/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jindal.forms;

import com.jindal.model.CustomerServiceModel;
import com.jindal.model.ItemModel;
import com.jindal.model.SalesOrderModel;
import com.jindal.model.StockModel;
import com.jindal.service.ItemService;
import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.table.DefaultTableModel;
import com.jindal.service.S16MaximumMatch;
import com.jindal.service.SalesService;
import com.jindal.service.Validator;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
/**
 *
 * @author RUBAL GARG
 */
public class SalesOrder extends javax.swing.JFrame {

    /**
     * Creates new form SalesOrder
     */
    private static DefaultTableModel tableModel;
    double grandTotal = 0;
    double netTotal = 0;
    int tableIndex = 0;
    double tax = 0;
    double freightCost = 0;
    double discountAmount = 0;
    double discountPer =0;
    private int mRightQuantity=-1;
    CustomerServiceModel customerObj = null;
    private List<StockModel> mListStockModel;
    int currentInvoiceNumber = 0;
    double taxValue = 0;
    double surchargeValue = 0;
    double surcharge = 0;
    
    public SalesOrder() {
        initComponents();
        fldDiscount.setText("0.0");
        if(mListStockModel==null)
                    mListStockModel=new ArrayList<StockModel>();
        
        ArrayList<String> finishArrayList = SalesService.getFinish();
        fldFinishSales.setModel(new javax.swing.DefaultComboBoxModel(finishArrayList.toArray()));
        
        new S16MaximumMatch(fldFinishSales);
        // design id
        ArrayList<String> finishArrayList1 = SalesService.getDesignId();
        fldDesignIdSales.setModel(new javax.swing.DefaultComboBoxModel(finishArrayList1.toArray()));
        new S16MaximumMatch(fldDesignIdSales);
        
        fldFreight.setText("0.00");
        fldDiscount.setText("0.00");
        
        //thickness
        ArrayList<String> finishArrayList2 = SalesService.getThickness();
        fldThicknessSales.setModel(new javax.swing.DefaultComboBoxModel(finishArrayList2.toArray()));
        new S16MaximumMatch(fldThicknessSales);
        
        // Regarding Tax and Surcharge
        getTax();
      }

    public SalesOrder(CustomerServiceModel customerObj) {
        initComponents();
        this.customerObj = customerObj;
        fldSizeSales.setText("8*4");
        
        currentInvoiceNumber = SalesService.getCurrentInvoiceNumber();
        lblInvoiceNumber.setText("Invoice Number : "+currentInvoiceNumber);
        lblCustomerNameSales.setText("Custmer Name : " + customerObj.getFirst_name() + " " + customerObj.getLast_name());
        lblFirmNameSales.setText("Firm Name : " + customerObj.getFirm_name());
        lblTinNoSales.setText("Tin No. : " + customerObj.getTinNo());
        fldTaxSales.setText("" + customerObj.getTax());
        fldDiscount.setText("0.0");
        if(mListStockModel==null)
                    mListStockModel=new ArrayList<StockModel>();
        //finish
        ArrayList<String> finishArrayList = SalesService.getFinish();
        fldFinishSales.setModel(new javax.swing.DefaultComboBoxModel(finishArrayList.toArray()));
        new S16MaximumMatch(fldFinishSales);
        
        // design id
        ArrayList<String> finishArrayList1 = SalesService.getDesignId();
        //fldDesignIdSales.setModel(new javax.swing.DefaultComboBoxModel(finishArrayList1.toArray()));
        //new S16MaximumMatch(fldDesignIdSales);
        
        fldFreight.setText("0.00");
        fldDiscount.setText("0.00");
        
        //thickness
        ArrayList<String> finishArrayList2 = SalesService.getThickness();
        fldThicknessSales.setModel(new javax.swing.DefaultComboBoxModel(finishArrayList2.toArray()));
        new S16MaximumMatch(fldThicknessSales);
    }
  
    /**p
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblCustomerNameSales = new javax.swing.JLabel();
        lblTinNoSales = new javax.swing.JLabel();
        lblTaxSales = new javax.swing.JLabel();
        lblFirmNameSales = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        btnAddItemSales = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        fldQuantitySales = new javax.swing.JTextField();
        fldRateSales = new javax.swing.JTextField();
        fldSizeSales = new javax.swing.JTextField();
        fldFinishSales = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableSalesOrder = new javax.swing.JTable();
        btnDeleteSales = new javax.swing.JButton();
        btnNextSales = new javax.swing.JButton();
        lblDiscount = new javax.swing.JLabel();
        lblFreight = new javax.swing.JLabel();
        lblGrandTotal = new javax.swing.JLabel();
        lblNetTotal = new javax.swing.JLabel();
        lblInvoiceNumber = new javax.swing.JLabel();
        lblQuantityError1 = new javax.swing.JLabel();
        lblQuantityError2 = new javax.swing.JLabel();
        rdAmount = new javax.swing.JRadioButton();
        rdPercantage = new javax.swing.JRadioButton();
        fldDiscount = new javax.swing.JTextField();
        fldFreight = new javax.swing.JTextField();
        lblDiscountValue = new javax.swing.JLabel();
        lblFreightValue = new javax.swing.JLabel();
        lblGrandTotalValue = new javax.swing.JLabel();
        lblNetTotalValue = new javax.swing.JLabel();
        lblFreightError = new javax.swing.JLabel();
        fldDesignIdSales = new javax.swing.JComboBox();
        lblSurcharge = new javax.swing.JLabel();
        lblSurchargeValue = new javax.swing.JLabel();
        fldThicknessSales = new javax.swing.JComboBox();
        lblTax = new javax.swing.JLabel();
        lblTaxValue = new javax.swing.JLabel();
        fldTaxSales = new javax.swing.JTextField();
        lblTaxError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        jLabel1.setForeground(java.awt.Color.orange);
        jLabel1.setText("    Jindal Enterprises");

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel2.setForeground(java.awt.Color.orange);
        jLabel2.setText("262, Industrial Area - II, Panchkula");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(535, 535, 535)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(439, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
        );

        lblCustomerNameSales.setText("Customer Name : ");

        lblTinNoSales.setText("Tin No : ");

        lblTaxSales.setText("Tax");

        lblFirmNameSales.setText("Firm Name :");

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setToolTipText("");

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel3.setForeground(java.awt.Color.blue);
        jLabel3.setText("Enter an Item");

        btnAddItemSales.setText("Add Item");
        btnAddItemSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddItemSalesActionPerformed(evt);
            }
        });

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel5.setText("Finish");

        jLabel4.setText("Design Id");

        jLabel6.setText("Quantity");

        jLabel7.setText("Rate");

        jLabel8.setText("Thickness");

        jLabel10.setText("Size");

        fldQuantitySales.setVerifyInputWhenFocusTarget(false);
        fldQuantitySales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fldQuantitySalesActionPerformed(evt);
            }
        });
        fldQuantitySales.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fldQuantitySalesFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fldQuantitySalesFocusLost(evt);
            }
        });
        fldQuantitySales.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fldQuantitySalesKeyTyped(evt);
            }
        });

        fldFinishSales.setEditable(true);
        fldFinishSales.setAutoscrolls(true);
        fldFinishSales.setFocusCycleRoot(true);
        fldFinishSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fldFinishSalesActionPerformed(evt);
            }
        });
        fldFinishSales.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fldFinishSalesFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fldFinishSalesFocusLost(evt);
            }
        });

        TableSalesOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DesignId", "Thickness", "Finish", "Quantity", "Rate", "Size", "Price"
            }
        ));
        jScrollPane1.setViewportView(TableSalesOrder);

        btnDeleteSales.setText("Delete");
        btnDeleteSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteSalesActionPerformed(evt);
            }
        });

        btnNextSales.setText("Next >>");
        btnNextSales.setEnabled(false);
        btnNextSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextSalesActionPerformed(evt);
            }
        });

        lblDiscount.setText("Discount");

        lblFreight.setText("Freight");

        lblGrandTotal.setText("Grand Total");

        lblNetTotal.setText("Net Total");

        lblInvoiceNumber.setText("Invoice Number : ");

        lblQuantityError1.setText("jLabel15");

        lblQuantityError2.setText("jLabel15");

        buttonGroup1.add(rdAmount);
        rdAmount.setSelected(true);
        rdAmount.setText("Amount");
        rdAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdAmountActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdPercantage);
        rdPercantage.setText("% Percantage");

        fldDiscount.setEnabled(false);
        fldDiscount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                fldDiscountFocusLost(evt);
            }
        });

        fldFreight.setEnabled(false);
        fldFreight.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                fldFreightFocusLost(evt);
            }
        });

        lblDiscountValue.setText("jLabel15");

        lblFreightValue.setText("jLabel15");

        lblGrandTotalValue.setText("jLabel15");

        lblNetTotalValue.setText("jLabel15");

        lblFreightError.setText("jLabel15");

        fldDesignIdSales.setEditable(true);
        fldDesignIdSales.setAutoscrolls(true);
        fldDesignIdSales.setFocusCycleRoot(true);
        fldDesignIdSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fldDesignIdSalesActionPerformed(evt);
            }
        });

        lblSurcharge.setText("Surcharge(%)");

        lblSurchargeValue.setText("jLabel11");

        fldThicknessSales.setEditable(true);
        fldThicknessSales.setAutoscrolls(true);
        fldThicknessSales.setFocusCycleRoot(true);
        fldThicknessSales.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fldThicknessSalesFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fldThicknessSalesFocusLost(evt);
            }
        });

        lblTax.setText("Tax");

        lblTaxValue.setText("jLabel12");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 783, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(97, 97, 97))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(35, 35, 35)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(fldFinishSales, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fldRateSales, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fldDesignIdSales, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(245, 245, 245)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(14, 14, 14)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblQuantityError1)
                                    .addComponent(lblQuantityError2)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(fldQuantitySales, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                                        .addComponent(fldSizeSales, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE))
                                    .addComponent(fldThicknessSales, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(235, 235, 235)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAddItemSales, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDeleteSales, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNextSales, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(394, 394, 394))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblInvoiceNumber)
                                .addGap(466, 466, 466)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(lblFreight)
                                                .addGap(41, 41, 41))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(lblDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(25, 25, 25)))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(lblDiscountValue, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                                            .addComponent(lblFreightValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblGrandTotal)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                                        .addComponent(lblGrandTotalValue, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(fldFreight, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblFreightError, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(rdAmount)
                                        .addGap(18, 18, 18)
                                        .addComponent(rdPercantage)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(fldDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(62, 62, 62)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblNetTotal)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblNetTotalValue, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblSurcharge)
                                            .addComponent(lblTax))
                                        .addGap(30, 30, 30)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblTaxValue)
                                            .addComponent(lblSurchargeValue))))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {fldFinishSales, fldQuantitySales, fldRateSales, fldSizeSales});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAddItemSales, btnBack, btnDeleteSales, btnNextSales});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblInvoiceNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fldDesignIdSales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fldThicknessSales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnBack))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fldFinishSales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(fldQuantitySales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnAddItemSales))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fldRateSales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(lblQuantityError1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(lblQuantityError2, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnDeleteSales)
                                    .addComponent(jLabel10)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(fldSizeSales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(9, 9, 9)))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNextSales))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDiscount)
                            .addComponent(rdAmount)
                            .addComponent(rdPercantage)
                            .addComponent(fldDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDiscountValue))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFreight)
                            .addComponent(fldFreight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFreightValue)
                            .addComponent(lblFreightError)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTax)
                            .addComponent(lblTaxValue))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSurcharge)
                            .addComponent(lblSurchargeValue))
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGrandTotal)
                            .addComponent(lblGrandTotalValue)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNetTotal)
                        .addComponent(lblNetTotalValue)))
                .addGap(183, 183, 183))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {fldFinishSales, fldQuantitySales, fldRateSales, fldSizeSales});

        jScrollPane2.setViewportView(jPanel1);

        fldTaxSales.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fldTaxSalesFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fldTaxSalesFocusLost(evt);
            }
        });
        fldTaxSales.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fldTaxSalesKeyTyped(evt);
            }
        });

        lblTaxError.setText("jLabel15");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(487, 487, 487)
                                .addComponent(lblTaxError))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(lblCustomerNameSales)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblFirmNameSales)
                                .addGap(261, 261, 261)
                                .addComponent(lblTinNoSales)
                                .addGap(221, 221, 221)
                                .addComponent(lblTaxSales)
                                .addGap(18, 18, 18)
                                .addComponent(fldTaxSales, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(83, 83, 83))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCustomerNameSales)
                    .addComponent(lblFirmNameSales)
                    .addComponent(lblTinNoSales)
                    .addComponent(fldTaxSales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTaxSales))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTaxError, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 538, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAddItemSalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddItemSalesActionPerformed
        ItemModel itemModel = new ItemModel();
        fldQuantitySales.setForeground(Color.red);
        itemModel.setDesign_Id(fldDesignIdSales.getSelectedItem().toString());
        itemModel.setThickness(fldThicknessSales.getSelectedItem().toString());
        itemModel.setFinish(fldFinishSales.getSelectedItem().toString());
        //itemModel.setQuantity(Integer.parseInt(fldQuantitySales.getText()));

        if (lblQuantityError1.getText().equals("jLabel15") && !fldDesignIdSales.getSelectedItem().toString().equals("") && !fldThicknessSales.getSelectedItem().toString().equals("")
                && !fldFinishSales.getSelectedItem().toString().equals("")
                && !fldQuantitySales.getText().equals("") && !fldRateSales.getText().equals("")
                && !fldSizeSales.getText().equals("")
                && Integer.parseInt(fldQuantitySales.getText().toString())>0 ) {
            tableModel = (DefaultTableModel) TableSalesOrder.getModel();
            tableModel.setRowCount(tableIndex);
            TableSalesOrder.setCellSelectionEnabled(true);
            int quantity = Integer.parseInt(fldQuantitySales.getText());
            double rate = Double.parseDouble(fldRateSales.getText());
            String price = (quantity * rate) + "";

            tableModel.insertRow(tableIndex++, new Object[]{new String(fldDesignIdSales.getSelectedItem().toString()), new String(fldThicknessSales.getSelectedItem().toString()),
                        new String(fldFinishSales.getSelectedItem().toString()), new String(fldQuantitySales.getText()), new String(fldRateSales.getText()), new String(fldSizeSales.getText()), new String(price)});
            
            for (StockModel stockModel : mListStockModel) {
                if(stockModel.getDesign_Id().equalsIgnoreCase(fldDesignIdSales.getSelectedItem().toString())
                        && stockModel.getThickness().equalsIgnoreCase(fldThicknessSales.getSelectedItem().toString())
                        && stockModel.getFinish().equalsIgnoreCase(fldFinishSales.getSelectedItem().toString()))
                {
                    stockModel.setQuantity(stockModel.getQuantity()-quantity);
                    break;
                }
            }
            //Now empty the upper fields.
            fldDesignIdSales.setSelectedIndex(0);
            fldThicknessSales.setSelectedIndex(0);
            fldFinishSales.setSelectedIndex(0);
            fldQuantitySales.setText("");
            fldRateSales.setText("");
            
            
            grandTotal = grandTotal + (quantity * rate);
            taxValue = (grandTotal * tax)/100;
            surchargeValue = (taxValue * surcharge)/100; 
            netTotal = grandTotal + surchargeValue + taxValue;
            
            lblGrandTotalValue.setText(grandTotal + "");
            lblSurchargeValue.setText(surchargeValue+"");
            lblTaxValue.setText(taxValue+"");
            lblNetTotalValue.setText(netTotal+"");
            
            //enabling discount , freight field , Next button
            fldDiscount.setEnabled(true);
            fldFreight.setEnabled(true);
            btnNextSales.setEnabled(true);
        }
    }//GEN-LAST:event_btnAddItemSalesActionPerformed

    private void fldQuantitySalesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fldQuantitySalesFocusLost
        if (!fldDesignIdSales.getSelectedItem().toString().equals("") && !fldThicknessSales.getSelectedItem().toString().equals("")
                && !fldFinishSales.getSelectedItem().toString().equals("")&&!fldQuantitySales.getText().equalsIgnoreCase("")) {
            if (mRightQuantity== -1)
            {
                fldQuantitySales.setForeground(Color.red);
                lblQuantityError1.setText("The Item you entered is not in stock");
                lblQuantityError1.setForeground(Color.red);
            }
            else if (mRightQuantity<Integer.parseInt(
                fldQuantitySales.getText().toString()))
            {
              lblQuantityError1.setText("Quantity you entered for this design id");
              lblQuantityError2.setText(" is not in stock. Right Quantity is " + mRightQuantity);
              lblQuantityError1.setForeground(Color.red);
              lblQuantityError2.setForeground(Color.red);
            }
        }
    }//GEN-LAST:event_fldQuantitySalesFocusLost

    private void fldFinishSalesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fldFinishSalesFocusLost
        getRightQuantity();    
    }//GEN-LAST:event_fldFinishSalesFocusLost

    private void btnDeleteSalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteSalesActionPerformed
        if (TableSalesOrder.getSelectedRow() >= 0) {
            int row = TableSalesOrder.getSelectedRow();
            tableModel = (DefaultTableModel) TableSalesOrder.getModel();
            double price = Double.parseDouble(tableModel.getValueAt(row, 6).toString());
            
            grandTotal = grandTotal - price;
            double taxOnPrice = (price * tax)/100;
            taxValue = taxValue - taxOnPrice;
            surchargeValue = surchargeValue - ((taxOnPrice * surcharge)/100);
            netTotal = netTotal - price - taxOnPrice - ((taxOnPrice * surcharge)/100);
            
            lblGrandTotalValue.setText(grandTotal+"");
            lblTaxValue.setText(taxValue+"");
            lblSurchargeValue.setText(surchargeValue+"");
            lblNetTotalValue.setText(netTotal+"");
            
            tableIndex--;            
            
            for (StockModel stockModel : mListStockModel) {
                if(stockModel.getDesign_Id().equalsIgnoreCase(fldDesignIdSales.getSelectedItem().toString())
                        && stockModel.getThickness().equalsIgnoreCase(fldThicknessSales.getSelectedItem().toString())
                        && stockModel.getFinish().equalsIgnoreCase(fldFinishSales.getSelectedItem().toString()))
                {
                   
                    stockModel.setQuantity(Integer.parseInt(tableModel.getValueAt(row,3).toString()));
                    System.out.println(""+Integer.parseInt(tableModel.getValueAt(row,3).toString()));
                                                   tableIndex--;            
         

                    break;
                }

        }
            tableModel.removeRow(row);
        }
        if(TableSalesOrder.getRowCount() == 0)
        {
            lblGrandTotalValue.setText("0.00");
            lblNetTotalValue.setText("0.00");
            lblFreightValue.setText("0.00");
            fldDiscount.setText("");
            fldFreight.setText("");
            lblDiscountValue.setText("0.00");
            lblFreightValue.setText("0.00");
            lblTaxValue.setText("0.00");
            lblSurchargeValue.setText("0.00");
            
            // disable frieght and discount field and Next button..
            fldDiscount.setEnabled(false);
            fldFreight.setEnabled(false);
            btnNextSales.setEnabled(false);
            tableIndex = 0;
        }
    }//GEN-LAST:event_btnDeleteSalesActionPerformed

    private void btnNextSalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextSalesActionPerformed
        if (TableSalesOrder.getRowCount() > 0) {
            ArrayList<ItemModel> items = new ArrayList<ItemModel>();
            SalesOrderModel salesModel = new SalesOrderModel();
            tableModel = (DefaultTableModel) TableSalesOrder.getModel();
            int rows = tableModel.getRowCount();
            for (int row = 0; row < rows; row++) {
                ItemModel item = new ItemModel();
                item.setDesign_Id(tableModel.getValueAt(row, 0).toString());
                item.setThickness(tableModel.getValueAt(row, 1).toString());
                item.setFinish(tableModel.getValueAt(row, 2).toString());
                item.setQuantity(Integer.parseInt(tableModel.getValueAt(row, 3).toString()));
                item.setRate(Double.parseDouble(tableModel.getValueAt(row, 4).toString()));
                item.setSize(tableModel.getValueAt(row, 5).toString());
                item.setPrice(Double.parseDouble(tableModel.getValueAt(row, 6).toString()));
                
                items.add(item);
            }
            salesModel.setInvoiceNumber(currentInvoiceNumber);
            salesModel.setItems(items);
            salesModel.setDiscount(Double.parseDouble(lblDiscountValue.getText()));
            salesModel.setFreight(Double.parseDouble(fldFreight.getText()));
            salesModel.setTax(tax);
            salesModel.setTaxValue(Double.parseDouble(lblTaxValue.getText()));
            salesModel.setSurcharge(surcharge);
            salesModel.setSurchargeValue(Double.parseDouble(lblSurchargeValue.getText()));
            
            
            salesModel.setGrandTotal(Double.parseDouble(lblGrandTotalValue.getText()));
            salesModel.setNetTotal(Double.parseDouble(lblNetTotalValue.getText()));
            salesModel.setCustomerObj(customerObj);
            
            Trasportation transport = new Trasportation(salesModel);
            transport.setVisible(true);
        }

    }//GEN-LAST:event_btnNextSalesActionPerformed

    private void fldTaxSalesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fldTaxSalesFocusLost
        if(fldTaxSales.getText()!=null && !fldTaxSales.getText().equals(""))
        {
              String taxString = fldTaxSales.getText();
               if(taxString.startsWith("."))
               {
                   
                   taxString = "0"+taxString;
                   tax = Double.parseDouble(taxString);
               }
             else if(taxString.endsWith("."))
               {
                   taxString = taxString+"0";
                   tax = Double.parseDouble(taxString);
               }
               else
                {
                    tax = Double.parseDouble(taxString);
                }
               String applicableTaxes = SalesService.getApplicableTaxes();
               if(applicableTaxes != null)
               {
                   String taxes[] = applicableTaxes.split(",");
                   String CustomerTax = Double.toString(tax);
                   for(String taxOne : taxes)
                   {
                       if(!taxOne.contains("."))
                       {
                           taxOne = taxOne+".0";
                       }
                       if(taxOne.equals(CustomerTax))
                       {
                           surcharge = SalesService.getSurcharge();
                       }
                   }
               }
             
           if(tableModel != null && tableModel.getRowCount() > 0)
           {
               lblTaxError.setText("");
               taxValue = (grandTotal * tax)/100;
               surchargeValue = (taxValue * surcharge)/100;
               netTotal = grandTotal + taxValue + surchargeValue;
               lblTaxValue.setText(taxValue+"");
               lblSurchargeValue.setText(surchargeValue+"");
               lblNetTotalValue.setText(netTotal+"");
               btnAddItemSales.setEnabled(true);
               btnNextSales.setEnabled(true);
           }
           lblTaxError.setText("");
        }
        else
        {
            lblTaxError.setText("You can't left tax field empty.");
            lblTaxError.setForeground(Color.red);
            btnNextSales.setEnabled(false);
            btnAddItemSales.setEnabled(false);
            btnNextSales.setEnabled(false);
        }
    }//GEN-LAST:event_fldTaxSalesFocusLost

    private void fldFreightFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fldFreightFocusLost
        String freight = fldFreight.getText();
        try
        {
            if(freight.equals(""))
            {
                grandTotal = grandTotal - freightCost;
                netTotal = netTotal - freightCost;
                lblGrandTotalValue.setText(grandTotal+"");
                lblNetTotalValue.setText(netTotal+"");
            }
            else
            {
                freightCost = Double.parseDouble(freight);
                grandTotal = grandTotal + freightCost;
                netTotal = netTotal + freightCost;
                lblGrandTotalValue.setText(grandTotal+"");
                lblNetTotalValue.setText(netTotal+"");
            }
        }
        catch(Exception e)
        {
            lblFreightError.setText("Please enter the valid freight cost");
            lblFreightError.setForeground(Color.red);
        }
    }//GEN-LAST:event_fldFreightFocusLost

    private void fldDiscountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fldDiscountFocusLost
        Enumeration<AbstractButton> buttons = buttonGroup1.getElements();
        String selectButton = "Amount";
        while(buttons.hasMoreElements())
        {
            AbstractButton button = buttons.nextElement();
            if(button.isSelected())
            {
                selectButton = button.getText();
                break;
            }
        }
        if(selectButton.equals("Amount"))
        {
            if(!fldDiscount.getText().equals(""))
            {
                discountAmount = Double.parseDouble(fldDiscount.getText());
                grandTotal = grandTotal - discountAmount;
                taxValue = (grandTotal * tax)/100;
                surchargeValue = (taxValue * surcharge)/100;
                double taxOnDiscount = (discountAmount*tax)/100;
                double surchargeOnTax = (taxOnDiscount*surcharge)/100;
                netTotal = netTotal - discountAmount - surchargeOnTax - taxOnDiscount;
                lblDiscountValue.setText(discountAmount+"");
                lblGrandTotalValue.setText(grandTotal+"");
                lblTaxValue.setText(taxValue+"");
                lblSurchargeValue.setText(surchargeValue+"");
                lblNetTotalValue.setText(netTotal+"");
            }
            else
            {
                double taxOnDiscount = (discountAmount*tax)/100;
                double surchargeOnTax = (taxOnDiscount*surcharge)/100;
                grandTotal = grandTotal + discountAmount;
                taxValue = taxValue + taxOnDiscount;
                surchargeValue = surchargeValue + surchargeOnTax;
                netTotal = netTotal + discountAmount + taxOnDiscount + surchargeOnTax;
                lblDiscountValue.setText("0.0");
                lblTaxValue.setText(taxValue+"");
                lblSurchargeValue.setText(surchargeValue+"");
                lblGrandTotalValue.setText(grandTotal+"");
                lblNetTotalValue.setText(netTotal+"");
            }
            
        }
        else if(selectButton.equals("% Percantage"))
        {
            if(!fldDiscount.getText().equals(""))
            {
                discountPer = Double.parseDouble(fldDiscount.getText());
                discountAmount = (grandTotal * discountPer)/100;
                grandTotal = grandTotal - discountAmount;
                taxValue = (grandTotal * tax)/100;
                surchargeValue = (taxValue * surcharge)/100;
                double taxOnDiscount = (discountAmount*tax)/100;
                double surchargeOnTax = (taxOnDiscount*surcharge)/100;
                netTotal = netTotal - discountAmount - surchargeOnTax - taxOnDiscount;
                lblDiscountValue.setText(discountAmount+"");
                lblGrandTotalValue.setText(grandTotal+"");
                lblTaxValue.setText(taxValue+"");
                lblSurchargeValue.setText(surchargeValue+"");
                lblNetTotalValue.setText(netTotal+"");
            }
            else
            {
                double taxOnDiscount = (discountAmount*tax)/100;
                double surchargeOnTax = (taxOnDiscount*surcharge)/100;
                grandTotal = grandTotal + discountAmount;
                taxValue = taxValue + taxOnDiscount;
                surchargeValue = surchargeValue + surchargeOnTax;
                netTotal = netTotal + discountAmount + taxOnDiscount + surchargeOnTax;
                lblDiscountValue.setText("0.0");
                lblTaxValue.setText(taxValue+"");
                lblSurchargeValue.setText(surchargeValue+"");
                lblGrandTotalValue.setText(grandTotal+"");
                lblNetTotalValue.setText(netTotal+"");
            }
        }
    }//GEN-LAST:event_fldDiscountFocusLost

    private void fldFinishSalesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fldFinishSalesFocusGained
        if(lblQuantityError1.getText()!=null || lblQuantityError1.getText().equals(""))
        {
            lblQuantityError1.setText("");
            lblQuantityError2.setText("");
        }
        
    }//GEN-LAST:event_fldFinishSalesFocusGained

    private void fldQuantitySalesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fldQuantitySalesFocusGained
getRightQuantity();
        
        if(!fldQuantitySales.getText().toString().equalsIgnoreCase(""))
if(mRightQuantity<Integer.parseInt(
    fldQuantitySales.getText().toString())&&mRightQuantity!=-1)
{
    fldQuantitySales.setText("");
    lblQuantityError1.setText("");
    lblQuantityError2.setText("");
    
    
}

    }//GEN-LAST:event_fldQuantitySalesFocusGained

    private void fldTaxSalesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fldTaxSalesFocusGained
        btnAddItemSales.setEnabled(true);
    }//GEN-LAST:event_fldTaxSalesFocusGained

    private void fldQuantitySalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fldQuantitySalesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fldQuantitySalesActionPerformed

    private void fldQuantitySalesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fldQuantitySalesKeyTyped
        Validator.integerValidation(evt);
    }//GEN-LAST:event_fldQuantitySalesKeyTyped

    private void fldThicknessSalesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fldThicknessSalesFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_fldThicknessSalesFocusGained

    private void fldThicknessSalesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fldThicknessSalesFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_fldThicknessSalesFocusLost

    private void fldTaxSalesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fldTaxSalesKeyTyped
        Validator.doubleValidation(evt, fldTaxSales);
        
    }//GEN-LAST:event_fldTaxSalesKeyTyped

    private void fldDesignIdSalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fldDesignIdSalesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fldDesignIdSalesActionPerformed

    private void fldFinishSalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fldFinishSalesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fldFinishSalesActionPerformed

    private void rdAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdAmountActionPerformed

    
    
    private void getRightQuantity()
    {
        
        boolean isDataBaseHitRequired=true;

        if(!fldDesignIdSales.getSelectedItem().toString().toString().equalsIgnoreCase("")
                &&!fldThicknessSales.getSelectedItem().toString().equalsIgnoreCase("")
                &&!fldFinishSales.getSelectedItem().toString().equalsIgnoreCase(""))
        {
            for (StockModel stockModel : mListStockModel) {
                if(stockModel.getDesign_Id().equalsIgnoreCase(fldDesignIdSales.getSelectedItem().toString())
                        && stockModel.getThickness().equalsIgnoreCase(fldThicknessSales.getSelectedItem().toString())
                        && stockModel.getFinish().equalsIgnoreCase(fldFinishSales.getSelectedItem().toString()))
                {
                    isDataBaseHitRequired = false;
                    mRightQuantity = stockModel.getQuantity();
                }
                    
                
                
            }
            
            if(isDataBaseHitRequired)
            {
            
            
            ItemModel itemModel = new ItemModel();
            itemModel.setDesign_Id(fldDesignIdSales.getSelectedItem().toString());
            itemModel.setThickness(fldThicknessSales.getSelectedItem().toString());
            itemModel.setFinish(fldFinishSales.getSelectedItem().toString());
            
             mRightQuantity= ItemService.checkItemQuantity(itemModel);
             if(mRightQuantity!=-1)
             {
             StockModel mStockModel=new StockModel();
             mStockModel.setDesign_Id(fldDesignIdSales.getSelectedItem().toString());
             mStockModel.setThickness(fldThicknessSales.getSelectedItem().toString());
            mStockModel.setFinish(fldFinishSales.getSelectedItem().toString());
            mStockModel.setQuantity(mRightQuantity);
            mListStockModel.add(mStockModel);
             }
            }
        }
    }
    
    public void getTax()
    {
        if(fldTaxSales.getText()!=null && !fldTaxSales.getText().equals(""))
        {
              String taxString = fldTaxSales.getText();
               if(taxString.startsWith("."))
               {
                   
                   taxString = "0"+taxString;
                   tax = Double.parseDouble(taxString);
               }
             else if(taxString.endsWith("."))
               {
                   taxString = taxString+"0";
                   tax = Double.parseDouble(taxString);
               }
               else
                {
                    tax = Double.parseDouble(taxString);
                }
               String applicableTaxes = SalesService.getApplicableTaxes();
               if(applicableTaxes != null)
               {
                   String taxes[] = applicableTaxes.split(",");
                   String CustomerTax = Double.toString(tax);
                   for(String taxOne : taxes)
                   {
                       if(taxOne.equals(CustomerTax))
                       {
                           surcharge = SalesService.getSurcharge();
                       }
                   }
               }
            }
    }
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SalesOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SalesOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SalesOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SalesOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SalesOrder().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableSalesOrder;
    private javax.swing.JButton btnAddItemSales;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeleteSales;
    private javax.swing.JButton btnNextSales;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox fldDesignIdSales;
    private javax.swing.JTextField fldDiscount;
    private javax.swing.JComboBox fldFinishSales;
    private javax.swing.JTextField fldFreight;
    private javax.swing.JTextField fldQuantitySales;
    private javax.swing.JTextField fldRateSales;
    private javax.swing.JTextField fldSizeSales;
    private javax.swing.JTextField fldTaxSales;
    private javax.swing.JComboBox fldThicknessSales;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCustomerNameSales;
    private javax.swing.JLabel lblDiscount;
    private javax.swing.JLabel lblDiscountValue;
    private javax.swing.JLabel lblFirmNameSales;
    private javax.swing.JLabel lblFreight;
    private javax.swing.JLabel lblFreightError;
    private javax.swing.JLabel lblFreightValue;
    private javax.swing.JLabel lblGrandTotal;
    private javax.swing.JLabel lblGrandTotalValue;
    private javax.swing.JLabel lblInvoiceNumber;
    private javax.swing.JLabel lblNetTotal;
    private javax.swing.JLabel lblNetTotalValue;
    private javax.swing.JLabel lblQuantityError1;
    private javax.swing.JLabel lblQuantityError2;
    private javax.swing.JLabel lblSurcharge;
    private javax.swing.JLabel lblSurchargeValue;
    private javax.swing.JLabel lblTax;
    private javax.swing.JLabel lblTaxError;
    private javax.swing.JLabel lblTaxSales;
    private javax.swing.JLabel lblTaxValue;
    private javax.swing.JLabel lblTinNoSales;
    private javax.swing.JRadioButton rdAmount;
    private javax.swing.JRadioButton rdPercantage;
    // End of variables declaration//GEN-END:variables
}
